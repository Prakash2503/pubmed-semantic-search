{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/v1';\nexport const searchPubMed = async (query, mode = 'simple') => {\n  try {\n    let response;\n    if (mode === 'simple') {\n      response = await axios.get(`${API_URL}/search`, {\n        params: {\n          query: query,\n          top_k: 10\n        }\n      });\n    } else {\n      response = await axios.post(`${API_URL}/advanced-search`, {\n        clauses: query,\n        top_k: 10\n      });\n    }\n    // MODIFIED: Return the full data object from the API\n    return response.data; // This will now include both { results: [...] and suggestion: \"...\" }\n  } catch (error) {\n    console.error('API Error:', error);\n    if (error.response) {\n      throw new Error(`Search failed: ${error.response.data.detail || 'An unknown server error occurred.'}`);\n    } else if (error.request) {\n      throw new Error('Network error: Could not connect to the search service.');\n    } else {\n      throw new Error(`An unexpected error occurred: ${error.message}`);\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","searchPubMed","query","mode","response","get","params","top_k","post","clauses","data","error","console","Error","detail","request","message"],"sources":["F:/CTS HACKATHON/pubmed-semantic-search/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/v1';\r\n\r\nexport const searchPubMed = async (query, mode = 'simple') => {\r\n  try {\r\n    let response;\r\n    if (mode === 'simple') {\r\n      response = await axios.get(`${API_URL}/search`, {\r\n        params: { query: query, top_k: 10 },\r\n      });\r\n    } else {\r\n      response = await axios.post(`${API_URL}/advanced-search`, {\r\n        clauses: query,\r\n        top_k: 10,\r\n      });\r\n    }\r\n    // MODIFIED: Return the full data object from the API\r\n    return response.data; // This will now include both { results: [...] and suggestion: \"...\" }\r\n  } catch (error) {\r\n    console.error('API Error:', error);\r\n    if (error.response) {\r\n      throw new Error(`Search failed: ${error.response.data.detail || 'An unknown server error occurred.'}`);\r\n    } else if (error.request) {\r\n      throw new Error('Network error: Could not connect to the search service.');\r\n    } else {\r\n      throw new Error(`An unexpected error occurred: ${error.message}`);\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,8BAA8B;AAE/E,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,IAAI,GAAG,QAAQ,KAAK;EAC5D,IAAI;IACF,IAAIC,QAAQ;IACZ,IAAID,IAAI,KAAK,QAAQ,EAAE;MACrBC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,SAAS,EAAE;QAC9CS,MAAM,EAAE;UAAEJ,KAAK,EAAEA,KAAK;UAAEK,KAAK,EAAE;QAAG;MACpC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLH,QAAQ,GAAG,MAAMR,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,kBAAkB,EAAE;QACxDY,OAAO,EAAEP,KAAK;QACdK,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IACA;IACA,OAAOH,QAAQ,CAACM,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IAClC,IAAIA,KAAK,CAACP,QAAQ,EAAE;MAClB,MAAM,IAAIS,KAAK,CAAC,kBAAkBF,KAAK,CAACP,QAAQ,CAACM,IAAI,CAACI,MAAM,IAAI,mCAAmC,EAAE,CAAC;IACxG,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;MACxB,MAAM,IAAIF,KAAK,CAAC,yDAAyD,CAAC;IAC5E,CAAC,MAAM;MACL,MAAM,IAAIA,KAAK,CAAC,iCAAiCF,KAAK,CAACK,OAAO,EAAE,CAAC;IACnE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}