{"ast":null,"code":"var _jsxFileName = \"F:\\\\CTS HACKATHON\\\\pubmed-semantic-search\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport SearchBar from './components/SearchBar';\nimport ResultsList from './components/ResultsList';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { searchPubMed } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [hasSearched, setHasSearched] = useState(false);\n  const handleSearch = async query => {\n    setIsLoading(true);\n    setError('');\n    setHasSearched(true);\n    setResults([]); // Clear previous results\n\n    try {\n      const data = await searchPubMed(query);\n      setResults(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PubMed Semantic Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your intelligent gateway to biomedical literature.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this), !isLoading && !error && hasSearched && results.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"No results found. Please try a different query.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultsList, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wmHG1e6BHSWtAlxO6Vmx/cwuFig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","ResultsList","LoadingSpinner","searchPubMed","jsxDEV","_jsxDEV","App","_s","results","setResults","isLoading","setIsLoading","error","setError","hasSearched","setHasSearched","handleSearch","query","data","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","length","style","textAlign","_c","$RefreshReg$"],"sources":["F:/CTS HACKATHON/pubmed-semantic-search/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/App.css';\r\nimport SearchBar from './components/SearchBar';\r\nimport ResultsList from './components/ResultsList';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport { searchPubMed } from './services/api';\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n\r\n  const handleSearch = async (query) => {\r\n    setIsLoading(true);\r\n    setError('');\r\n    setHasSearched(true);\r\n    setResults([]); // Clear previous results\r\n\r\n    try {\r\n      const data = await searchPubMed(query);\r\n      setResults(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <h1>PubMed Semantic Search</h1>\r\n        <p>Your intelligent gateway to biomedical literature.</p>\r\n      </header>\r\n      \r\n      <main>\r\n        <SearchBar onSearch={handleSearch} isLoading={isLoading} />\r\n        \r\n        {isLoading && <LoadingSpinner />}\r\n        \r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        \r\n        {!isLoading && !error && hasSearched && results.length === 0 && (\r\n          <p style={{ textAlign: 'center' }}>No results found. Please try a different query.</p>\r\n        )}\r\n        \r\n        <ResultsList results={results} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}