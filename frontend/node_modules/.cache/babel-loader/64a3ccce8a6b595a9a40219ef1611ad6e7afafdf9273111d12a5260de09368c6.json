{"ast":null,"code":"var _jsxFileName = \"F:\\\\CTS HACKATHON\\\\CTS HACKATHON\\\\pubmed-semantic-search\\\\frontend\\\\src\\\\components\\\\KnowledgeGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useCallback } from 'react';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KnowledgeGraph = ({\n  graphData\n}) => {\n  _s();\n  const fgRef = useRef();\n\n  // Custom function to draw nodes and their labels on the canvas\n  const handleNodeCanvasObject = (node, ctx, globalScale) => {\n    const label = node.label;\n    const fontSize = 12 / globalScale; // Font size adjusts with zoom\n    ctx.font = `${fontSize}px Sans-Serif`;\n\n    // Draw the node circle\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, 5, 0, 2 * Math.PI, false);\n    ctx.fillStyle = node.color || 'lightblue'; // Use color from graph data or a default\n    ctx.fill();\n\n    // Draw the node label\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = 'black';\n    ctx.fillText(label, node.x, node.y + 10); // Position label below the node\n  };\n\n  // --- UPDATED CLICK HANDLER ---\n  // This function now handles both opening URLs and zooming.\n  const handleNodeClick = useCallback(node => {\n    // Check if the node has a valid URL property\n    if (node.url && (node.url.startsWith('http://') || node.url.startsWith('https://'))) {\n      // Open the URL in a new browser tab\n      window.open(node.url, '_blank');\n    } else {\n      // If no valid URL, fall back to zooming in on the node\n      console.warn(`Node \"${node.label}\" has no valid URL. Zooming instead.`);\n      const distance = 40;\n      const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\n      if (fgRef.current) {\n        fgRef.current.cameraPosition({\n          x: node.x * distRatio,\n          y: node.y * distRatio,\n          z: node.z * distRatio\n        },\n        // new position\n        node,\n        // lookAt target\n        3000 // transition duration in ms\n        );\n      }\n    }\n  }, [fgRef]); // Dependency array ensures the function is not recreated on every render\n\n  // Render a message if there's no graph data\n  if (!graphData || !graphData.nodes || graphData.nodes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-message\",\n      children: \"No graph data could be generated for this query.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the graph component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      ref: fgRef,\n      graphData: graphData\n\n      // --- Component Properties ---\n      ,\n      nodeCanvasObject: handleNodeCanvasObject // Use our custom drawing function\n      ,\n      nodeVal: 8 // Make nodes slightly larger\n      ,\n      nodeAutoColorBy: \"group\" // Automatically color nodes by their group\n      ,\n\n      linkDirectionalArrowLength: 3.5,\n      linkDirectionalArrowRelPos: 1,\n      linkLabel: \"label\" // Show relationship on link hover\n      ,\n      linkWidth: 1\n\n      // Assign our updated click handler to the component\n      ,\n      onNodeClick: handleNodeClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(KnowledgeGraph, \"khL57LSuAdtxAw/Q6PBeR37sHHA=\");\n_c = KnowledgeGraph;\nexport default KnowledgeGraph;\nvar _c;\n$RefreshReg$(_c, \"KnowledgeGraph\");","map":{"version":3,"names":["React","useRef","useCallback","ForceGraph2D","jsxDEV","_jsxDEV","KnowledgeGraph","graphData","_s","fgRef","handleNodeCanvasObject","node","ctx","globalScale","label","fontSize","font","beginPath","arc","x","y","Math","PI","fillStyle","color","fill","textAlign","textBaseline","fillText","handleNodeClick","url","startsWith","window","open","console","warn","distance","distRatio","hypot","z","current","cameraPosition","nodes","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","nodeCanvasObject","nodeVal","nodeAutoColorBy","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkLabel","linkWidth","onNodeClick","_c","$RefreshReg$"],"sources":["F:/CTS HACKATHON/CTS HACKATHON/pubmed-semantic-search/frontend/src/components/KnowledgeGraph.js"],"sourcesContent":["import React, { useRef, useCallback } from 'react';\r\nimport ForceGraph2D from 'react-force-graph-2d';\r\n\r\nconst KnowledgeGraph = ({ graphData }) => {\r\n  const fgRef = useRef();\r\n\r\n  // Custom function to draw nodes and their labels on the canvas\r\n  const handleNodeCanvasObject = (node, ctx, globalScale) => {\r\n    const label = node.label;\r\n    const fontSize = 12 / globalScale; // Font size adjusts with zoom\r\n    ctx.font = `${fontSize}px Sans-Serif`;\r\n\r\n    // Draw the node circle\r\n    ctx.beginPath();\r\n    ctx.arc(node.x, node.y, 5, 0, 2 * Math.PI, false);\r\n    ctx.fillStyle = node.color || 'lightblue'; // Use color from graph data or a default\r\n    ctx.fill();\r\n\r\n    // Draw the node label\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.fillStyle = 'black';\r\n    ctx.fillText(label, node.x, node.y + 10); // Position label below the node\r\n  };\r\n\r\n  // --- UPDATED CLICK HANDLER ---\r\n  // This function now handles both opening URLs and zooming.\r\n  const handleNodeClick = useCallback(node => {\r\n    // Check if the node has a valid URL property\r\n    if (node.url && (node.url.startsWith('http://') || node.url.startsWith('https://'))) {\r\n      // Open the URL in a new browser tab\r\n      window.open(node.url, '_blank');\r\n    } else {\r\n      // If no valid URL, fall back to zooming in on the node\r\n      console.warn(`Node \"${node.label}\" has no valid URL. Zooming instead.`);\r\n      const distance = 40;\r\n      const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\r\n      if (fgRef.current) {\r\n        fgRef.current.cameraPosition(\r\n          { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }, // new position\r\n          node, // lookAt target\r\n          3000  // transition duration in ms\r\n        );\r\n      }\r\n    }\r\n  }, [fgRef]); // Dependency array ensures the function is not recreated on every render\r\n\r\n  // Render a message if there's no graph data\r\n  if (!graphData || !graphData.nodes || graphData.nodes.length === 0) {\r\n    return <div className=\"info-message\">No graph data could be generated for this query.</div>;\r\n  }\r\n\r\n  // Render the graph component\r\n  return (\r\n    <div className=\"graph-container\">\r\n      <ForceGraph2D\r\n        ref={fgRef}\r\n        graphData={graphData}\r\n        \r\n        // --- Component Properties ---\r\n        nodeCanvasObject={handleNodeCanvasObject} // Use our custom drawing function\r\n        nodeVal={8} // Make nodes slightly larger\r\n        nodeAutoColorBy=\"group\" // Automatically color nodes by their group\r\n        \r\n        linkDirectionalArrowLength={3.5}\r\n        linkDirectionalArrowRelPos={1}\r\n        linkLabel=\"label\" // Show relationship on link hover\r\n        linkWidth={1}\r\n        \r\n        // Assign our updated click handler to the component\r\n        onNodeClick={handleNodeClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KnowledgeGraph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}