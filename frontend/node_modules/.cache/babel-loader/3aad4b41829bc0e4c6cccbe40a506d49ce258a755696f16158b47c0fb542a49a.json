{"ast":null,"code":"var _jsxFileName = \"F:\\\\CTS HACKATHON\\\\CTS HACKATHON\\\\CTS HACKATHON\\\\pubmed-semantic-search\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/App.css';\nimport SearchBar from './components/SearchBar';\nimport ResultsList from './components/ResultsList';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport AdvancedSearchForm from './components/AdvancedSearchForm';\nimport Pagination from './components/Pagination';\nimport KnowledgeGraph from './components/KnowledgeGraph';\nimport { searchPubMed, fetchKnowledgeGraph } from './services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RESULTS_PER_PAGE = 10;\nfunction App() {\n  _s();\n  const [allResults, setAllResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [hasSearched, setHasSearched] = useState(false);\n  const [searchMode, setSearchMode] = useState('simple');\n  const [suggestion, setSuggestion] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastQuery, setLastQuery] = useState('');\n  const [viewMode, setViewMode] = useState('list');\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [isGraphLoading, setIsGraphLoading] = useState(false);\n  const handleSearch = async query => {\n    if (!query || typeof query === 'string' && query.trim() === '') return;\n    setIsLoading(true);\n    setError('');\n    setHasSearched(true);\n    setAllResults([]);\n    setSuggestion('');\n    setCurrentPage(1);\n    setLastQuery(typeof query === 'string' ? query : 'advanced search');\n    setViewMode('list');\n    try {\n      const data = await searchPubMed(query, searchMode);\n      setAllResults(data.results);\n      setSuggestion(data.suggestion || '');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // --- REFACTORED: useEffect for Graph Generation ---\n  useEffect(() => {\n    const getGraphData = async () => {\n      if (viewMode === 'graph' && allResults.length > 0 && !isLoading) {\n        setIsGraphLoading(true);\n        setError('');\n        setGraphData({\n          nodes: [],\n          links: []\n        });\n        const contextText = allResults.slice(0, 10).filter(res => res.abstract).map(res => `From article pmid:${res.pmid} url:${res.url}: ${res.title}. ${res.abstract}`).join('\\n\\n');\n        if (contextText.length < 100) {\n          setError(\"Not enough content from search results to generate a graph.\");\n          setIsGraphLoading(false);\n          return;\n        }\n        try {\n          const data = await fetchKnowledgeGraph(contextText);\n          if (!data.nodes || data.nodes.length === 0) {\n            setError(\"The model could not extract any relationships from the text.\");\n          }\n          setGraphData(data);\n        } catch (err) {\n          setError(err.message);\n        } finally {\n          setIsGraphLoading(false);\n        }\n      }\n    };\n    getGraphData();\n  }, [viewMode, allResults, isLoading]);\n  const handleSuggestionClick = suggestedQuery => {\n    handleSearch(suggestedQuery);\n  };\n  const lastResultIndex = currentPage * RESULTS_PER_PAGE;\n  const firstResultIndex = lastResultIndex - RESULTS_PER_PAGE;\n  const currentResults = allResults.slice(firstResultIndex, lastResultIndex);\n  const totalPages = Math.ceil(allResults.length / RESULTS_PER_PAGE);\n  const renderContent = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this);\n    }\n    if (error && viewMode !== 'graph') {\n      // Show search errors in list view\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this);\n    }\n    if (!hasSearched) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info-message\",\n        children: \"Enter a query to search for PubMed articles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 20\n      }, this);\n    }\n    if (viewMode === 'graph') {\n      if (isGraphLoading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 40\n      }, this);\n      if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 31\n      }, this); // Show graph-specific errors\n      if (!graphData.nodes || graphData.nodes.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info-message\",\n          children: \"No graph data could be generated for this query.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 24\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(KnowledgeGraph, {\n        graphData: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 20\n      }, this);\n    }\n    if (allResults.length > 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ResultsList, {\n          results: currentResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          currentPage: currentPage,\n          totalPages: totalPages,\n          onPageChange: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-message\",\n      children: \"No results found for your query.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PubMed Semantic Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your AI-powered research assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-mode-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: searchMode === 'simple' ? 'active' : '',\n        onClick: () => setSearchMode('simple'),\n        children: \"Simple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: searchMode === 'advanced' ? 'active' : '',\n        onClick: () => setSearchMode('advanced'),\n        children: \"Advanced\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), searchMode === 'simple' ? /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch,\n      isLoading: isLoading,\n      initialQuery: lastQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(AdvancedSearchForm, {\n      onSearch: handleSearch,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), suggestion && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"suggestion\",\n      children: [\"Did you mean: \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSearch(suggestion),\n        children: suggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 68\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 28\n    }, this), hasSearched && !isLoading && allResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-mode-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === 'list' ? 'active' : '',\n        onClick: () => setViewMode('list'),\n        children: \"List View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === 'graph' ? 'active' : '',\n        onClick: () => setViewMode('graph'),\n        children: \"Graph View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 18\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"lr3t8QxUDXITavxYGyGvesD2dl8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","ResultsList","LoadingSpinner","AdvancedSearchForm","Pagination","KnowledgeGraph","searchPubMed","fetchKnowledgeGraph","jsxDEV","_jsxDEV","Fragment","_Fragment","RESULTS_PER_PAGE","App","_s","allResults","setAllResults","isLoading","setIsLoading","error","setError","hasSearched","setHasSearched","searchMode","setSearchMode","suggestion","setSuggestion","currentPage","setCurrentPage","lastQuery","setLastQuery","viewMode","setViewMode","graphData","setGraphData","nodes","links","isGraphLoading","setIsGraphLoading","handleSearch","query","trim","data","results","err","message","getGraphData","length","contextText","slice","filter","res","abstract","map","pmid","url","title","join","handleSuggestionClick","suggestedQuery","lastResultIndex","firstResultIndex","currentResults","totalPages","Math","ceil","renderContent","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onPageChange","onClick","onSearch","initialQuery","_c","$RefreshReg$"],"sources":["F:/CTS HACKATHON/CTS HACKATHON/CTS HACKATHON/pubmed-semantic-search/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/App.css';\r\nimport SearchBar from './components/SearchBar';\r\nimport ResultsList from './components/ResultsList';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport AdvancedSearchForm from './components/AdvancedSearchForm';\r\nimport Pagination from './components/Pagination';\r\nimport KnowledgeGraph from './components/KnowledgeGraph';\r\nimport { searchPubMed, fetchKnowledgeGraph } from './services/api';\r\n\r\nconst RESULTS_PER_PAGE = 10;\r\n\r\nfunction App() {\r\n    const [allResults, setAllResults] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [hasSearched, setHasSearched] = useState(false);\r\n    const [searchMode, setSearchMode] = useState('simple');\r\n    const [suggestion, setSuggestion] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [lastQuery, setLastQuery] = useState('');\r\n    const [viewMode, setViewMode] = useState('list');\r\n    const [graphData, setGraphData] = useState({ nodes: [], links: [] });\r\n    const [isGraphLoading, setIsGraphLoading] = useState(false);\r\n\r\n    const handleSearch = async (query) => {\r\n        if (!query || (typeof query === 'string' && query.trim() === '')) return;\r\n        setIsLoading(true);\r\n        setError('');\r\n        setHasSearched(true);\r\n        setAllResults([]);\r\n        setSuggestion('');\r\n        setCurrentPage(1);\r\n        setLastQuery(typeof query === 'string' ? query : 'advanced search');\r\n        setViewMode('list'); \r\n        try {\r\n            const data = await searchPubMed(query, searchMode);\r\n            setAllResults(data.results);\r\n            setSuggestion(data.suggestion || '');\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- REFACTORED: useEffect for Graph Generation ---\r\n    useEffect(() => {\r\n        const getGraphData = async () => {\r\n            if (viewMode === 'graph' && allResults.length > 0 && !isLoading) {\r\n                setIsGraphLoading(true);\r\n                setError('');\r\n                setGraphData({ nodes: [], links: [] });\r\n\r\n                const contextText = allResults\r\n                    .slice(0, 10)\r\n                    .filter(res => res.abstract)\r\n                    .map(res => `From article pmid:${res.pmid} url:${res.url}: ${res.title}. ${res.abstract}`)\r\n                    .join('\\n\\n');\r\n\r\n                if (contextText.length < 100) {\r\n                    setError(\"Not enough content from search results to generate a graph.\");\r\n                    setIsGraphLoading(false);\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    const data = await fetchKnowledgeGraph(contextText);\r\n                    if (!data.nodes || data.nodes.length === 0) {\r\n                        setError(\"The model could not extract any relationships from the text.\");\r\n                    }\r\n                    setGraphData(data);\r\n                } catch (err) {\r\n                    setError(err.message);\r\n                } finally {\r\n                    setIsGraphLoading(false);\r\n                }\r\n            }\r\n        };\r\n        getGraphData();\r\n    }, [viewMode, allResults, isLoading]);\r\n\r\n    const handleSuggestionClick = (suggestedQuery) => {\r\n        handleSearch(suggestedQuery);\r\n    };\r\n\r\n    const lastResultIndex = currentPage * RESULTS_PER_PAGE;\r\n    const firstResultIndex = lastResultIndex - RESULTS_PER_PAGE;\r\n    const currentResults = allResults.slice(firstResultIndex, lastResultIndex);\r\n    const totalPages = Math.ceil(allResults.length / RESULTS_PER_PAGE);\r\n\r\n    const renderContent = () => {\r\n        if (isLoading) {\r\n            return <LoadingSpinner />;\r\n        }\r\n        if (error && viewMode !== 'graph') { // Show search errors in list view\r\n             return <p className=\"error-message\">{error}</p>;\r\n        }\r\n        if (!hasSearched) {\r\n            return <p className=\"info-message\">Enter a query to search for PubMed articles.</p>;\r\n        }\r\n        if (viewMode === 'graph') {\r\n            if (isGraphLoading) return <LoadingSpinner />;\r\n            if (error) return <p className=\"error-message\">{error}</p>; // Show graph-specific errors\r\n            if (!graphData.nodes || graphData.nodes.length === 0) {\r\n                return <p className=\"info-message\">No graph data could be generated for this query.</p>;\r\n            }\r\n            return <KnowledgeGraph graphData={graphData} />;\r\n        }\r\n        if (allResults.length > 0) {\r\n            return (\r\n                <>\r\n                    <ResultsList results={currentResults} />\r\n                    <Pagination\r\n                        currentPage={currentPage}\r\n                        totalPages={totalPages}\r\n                        onPageChange={setCurrentPage}\r\n                    />\r\n                </>\r\n            );\r\n        }\r\n        return <p className=\"info-message\">No results found for your query.</p>;\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <header className=\"app-header\">\r\n                <h1>PubMed Semantic Search</h1>\r\n                <p>Your AI-powered research assistant</p>\r\n            </header>\r\n\r\n            <div className=\"search-mode-toggle\">\r\n                <button className={searchMode === 'simple' ? 'active' : ''} onClick={() => setSearchMode('simple')}>Simple</button>\r\n                <button className={searchMode === 'advanced' ? 'active' : ''} onClick={() => setSearchMode('advanced')}>Advanced</button>\r\n            </div>\r\n            \r\n            {searchMode === 'simple' ? (\r\n                <SearchBar onSearch={handleSearch} isLoading={isLoading} initialQuery={lastQuery} />\r\n            ) : (\r\n                <AdvancedSearchForm onSearch={handleSearch} isLoading={isLoading} />\r\n            )}\r\n\r\n            {suggestion && <p className=\"suggestion\">Did you mean: <button onClick={() => handleSearch(suggestion)}>{suggestion}</button></p>}\r\n\r\n            {hasSearched && !isLoading && allResults.length > 0 && (\r\n                 <div className=\"view-mode-toggle\">\r\n                    <button className={viewMode === 'list' ? 'active' : ''} onClick={() => setViewMode('list')}>List View</button>\r\n                    <button className={viewMode === 'graph' ? 'active' : ''} onClick={() => setViewMode('graph')}>Graph View</button>\r\n                </div>\r\n            )}\r\n\r\n            {renderContent()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}