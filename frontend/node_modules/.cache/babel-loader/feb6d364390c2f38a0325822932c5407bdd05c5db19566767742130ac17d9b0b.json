{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/v1';\nexport const searchPubMed = async (query, mode = 'simple') => {\n  try {\n    const response = mode === 'simple' ? await axios.get(`${API_URL}/search`, {\n      params: {\n        query,\n        top_k: 100\n      }\n    }) : await axios.post(`${API_URL}/advanced-search`, {\n      clauses: query,\n      top_k: 100\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Search API Error:', error);\n    if (error.response) {\n      throw new Error(`Search failed: ${error.response.data.detail || 'The server returned an error.'}`);\n    } else if (error.request) {\n      throw new Error('Network Error: Could not connect to the search service.');\n    } else {\n      throw new Error(`An unexpected error occurred: ${error.message}`);\n    }\n  }\n};\n\n// --- REFACTORED: fetchKnowledgeGraph now sends context ---\nexport const fetchKnowledgeGraph = async contextText => {\n  try {\n    const response = await axios.post(`${API_URL}/knowledge-graph`, {\n      context_text: contextText\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Graph API Error:', error);\n    if (error.response) {\n      throw new Error(`Graph generation failed: ${error.response.data.detail || 'Server error'}`);\n    } else if (error.request) {\n      throw new Error('Network Error: Could not connect to the graph service.');\n    } else {\n      throw new Error(`An unexpected error occurred: ${error.message}`);\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","searchPubMed","query","mode","response","get","params","top_k","post","clauses","data","error","console","Error","detail","request","message","fetchKnowledgeGraph","contextText","context_text"],"sources":["F:/CTS HACKATHON/CTS HACKATHON/CTS HACKATHON/pubmed-semantic-search/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/v1';\r\n\r\nexport const searchPubMed = async (query, mode = 'simple') => {\r\n    try {\r\n        const response = mode === 'simple'\r\n            ? await axios.get(`${API_URL}/search`, { params: { query, top_k: 100 } })\r\n            : await axios.post(`${API_URL}/advanced-search`, { clauses: query, top_k: 100 });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Search API Error:', error);\r\n        if (error.response) {\r\n            throw new Error(`Search failed: ${error.response.data.detail || 'The server returned an error.'}`);\r\n        } else if (error.request) {\r\n            throw new Error('Network Error: Could not connect to the search service.');\r\n        } else {\r\n            throw new Error(`An unexpected error occurred: ${error.message}`);\r\n        }\r\n    }\r\n};\r\n\r\n// --- REFACTORED: fetchKnowledgeGraph now sends context ---\r\nexport const fetchKnowledgeGraph = async (contextText) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/knowledge-graph`, {\r\n            context_text: contextText\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Graph API Error:', error);\r\n        if (error.response) {\r\n            throw new Error(`Graph generation failed: ${error.response.data.detail || 'Server error'}`);\r\n        } else if (error.request) {\r\n            throw new Error('Network Error: Could not connect to the graph service.');\r\n        } else {\r\n            throw new Error(`An unexpected error occurred: ${error.message}`);\r\n        }\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,8BAA8B;AAE/E,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,IAAI,GAAG,QAAQ,KAAK;EAC1D,IAAI;IACA,MAAMC,QAAQ,GAAGD,IAAI,KAAK,QAAQ,GAC5B,MAAMP,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,SAAS,EAAE;MAAES,MAAM,EAAE;QAAEJ,KAAK;QAAEK,KAAK,EAAE;MAAI;IAAE,CAAC,CAAC,GACvE,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,kBAAkB,EAAE;MAAEY,OAAO,EAAEP,KAAK;MAAEK,KAAK,EAAE;IAAI,CAAC,CAAC;IACpF,OAAOH,QAAQ,CAACM,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,IAAIA,KAAK,CAACP,QAAQ,EAAE;MAChB,MAAM,IAAIS,KAAK,CAAC,kBAAkBF,KAAK,CAACP,QAAQ,CAACM,IAAI,CAACI,MAAM,IAAI,+BAA+B,EAAE,CAAC;IACtG,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;MACtB,MAAM,IAAIF,KAAK,CAAC,yDAAyD,CAAC;IAC9E,CAAC,MAAM;MACH,MAAM,IAAIA,KAAK,CAAC,iCAAiCF,KAAK,CAACK,OAAO,EAAE,CAAC;IACrE;EACJ;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,WAAW,IAAK;EACtD,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMR,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,kBAAkB,EAAE;MAC5DsB,YAAY,EAAED;IAClB,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACM,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,IAAIA,KAAK,CAACP,QAAQ,EAAE;MAChB,MAAM,IAAIS,KAAK,CAAC,4BAA4BF,KAAK,CAACP,QAAQ,CAACM,IAAI,CAACI,MAAM,IAAI,cAAc,EAAE,CAAC;IAC/F,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;MACtB,MAAM,IAAIF,KAAK,CAAC,wDAAwD,CAAC;IAC7E,CAAC,MAAM;MACH,MAAM,IAAIA,KAAK,CAAC,iCAAiCF,KAAK,CAACK,OAAO,EAAE,CAAC;IACrE;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}