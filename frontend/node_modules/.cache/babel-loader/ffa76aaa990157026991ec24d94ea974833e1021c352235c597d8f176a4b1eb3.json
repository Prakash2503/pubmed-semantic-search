{"ast":null,"code":"import axios from 'axios';\n\n// Get the backend API URL from an environment variable.\n// This allows you to easily switch between local development and a deployed production URL.\nconst API_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/v1';\n\n/**\r\n * Fetches search results from the backend API.\r\n *\r\n * @param {string} query The user's search query.\r\n * @returns {Promise<Array>} A promise that resolves to an array of search result objects.\r\n * @throws {Error} Throws an error with a user-friendly message if the API call fails.\r\n */\nexport const searchPubMed = async query => {\n  try {\n    const response = await axios.get(`${API_URL}/search`, {\n      params: {\n        query: query,\n        top_k: 10 // We request the top 10 re-ranked results\n      }\n    });\n    // The actual search results are in response.data.results\n    return response.data.results;\n  } catch (error) {\n    console.error('API Error:', error);\n\n    // Provide a clear error message for the UI\n    if (error.response) {\n      // The server responded with an error status (4xx or 5xx)\n      throw new Error(`Search failed: ${error.response.data.detail || 'An unknown server error occurred.'}`);\n    } else if (error.request) {\n      // The request was made but no response was received\n      throw new Error('Network error: Could not connect to the search service. Please check your connection and try again.');\n    } else {\n      // Something else happened while setting up the request\n      throw new Error(`An unexpected error occurred: ${error.message}`);\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","searchPubMed","query","response","get","params","top_k","data","results","error","console","Error","detail","request","message"],"sources":["F:/CTS HACKATHON/pubmed-semantic-search/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Get the backend API URL from an environment variable.\r\n// This allows you to easily switch between local development and a deployed production URL.\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000/api/v1';\r\n\r\n/**\r\n * Fetches search results from the backend API.\r\n *\r\n * @param {string} query The user's search query.\r\n * @returns {Promise<Array>} A promise that resolves to an array of search result objects.\r\n * @throws {Error} Throws an error with a user-friendly message if the API call fails.\r\n */\r\nexport const searchPubMed = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/search`, {\r\n      params: {\r\n        query: query,\r\n        top_k: 10, // We request the top 10 re-ranked results\r\n      },\r\n    });\r\n    // The actual search results are in response.data.results\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error('API Error:', error);\r\n\r\n    // Provide a clear error message for the UI\r\n    if (error.response) {\r\n      // The server responded with an error status (4xx or 5xx)\r\n      throw new Error(`Search failed: ${error.response.data.detail || 'An unknown server error occurred.'}`);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      throw new Error('Network error: Could not connect to the search service. Please check your connection and try again.');\r\n    } else {\r\n      // Something else happened while setting up the request\r\n      throw new Error(`An unexpected error occurred: ${error.message}`);\r\n    }\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,8BAA8B;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,SAAS,EAAE;MACpDQ,MAAM,EAAE;QACNH,KAAK,EAAEA,KAAK;QACZI,KAAK,EAAE,EAAE,CAAE;MACb;IACF,CAAC,CAAC;IACF;IACA,OAAOH,QAAQ,CAACI,IAAI,CAACC,OAAO;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;;IAElC;IACA,IAAIA,KAAK,CAACN,QAAQ,EAAE;MAClB;MACA,MAAM,IAAIQ,KAAK,CAAC,kBAAkBF,KAAK,CAACN,QAAQ,CAACI,IAAI,CAACK,MAAM,IAAI,mCAAmC,EAAE,CAAC;IACxG,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;MACxB;MACA,MAAM,IAAIF,KAAK,CAAC,qGAAqG,CAAC;IACxH,CAAC,MAAM;MACL;MACA,MAAM,IAAIA,KAAK,CAAC,iCAAiCF,KAAK,CAACK,OAAO,EAAE,CAAC;IACnE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}