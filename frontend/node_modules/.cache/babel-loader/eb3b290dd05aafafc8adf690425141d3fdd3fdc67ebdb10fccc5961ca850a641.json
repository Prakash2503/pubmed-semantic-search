{"ast":null,"code":"var _jsxFileName = \"F:\\\\CTS HACKATHON\\\\CTS HACKATHON\\\\pubmed-semantic-search\\\\frontend\\\\src\\\\components\\\\Pagination.js\";\nimport React from 'react';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange\n}) => {\n  if (totalPages <= 1) {\n    return null; // Don't render pagination if there's only one page\n  }\n  const handlePageClick = page => {\n    if (page >= 1 && page <= totalPages) {\n      onPageChange(page);\n    }\n  };\n\n  // This function creates the array of page numbers to display\n  const createPageNumbers = () => {\n    const pageNumbers = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pageNumbers.push(i);\n    }\n    // For a more advanced component, you could add logic here\n    // to show \"...\" for a large number of pages.\n    return pageNumbers;\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"pagination-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination-button\",\n      onClick: () => handlePageClick(currentPage - 1),\n      disabled: currentPage === 1,\n      children: \"\\xAB Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), createPageNumbers().map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `pagination-button ${currentPage === number ? 'active' : ''}`,\n      onClick: () => handlePageClick(number),\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination-button\",\n      onClick: () => handlePageClick(currentPage + 1),\n      disabled: currentPage === totalPages,\n      children: \"Next \\xBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pagination","currentPage","totalPages","onPageChange","handlePageClick","page","createPageNumbers","pageNumbers","i","push","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","number","_c","$RefreshReg$"],"sources":["F:/CTS HACKATHON/CTS HACKATHON/pubmed-semantic-search/frontend/src/components/Pagination.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/App.css';\r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n  if (totalPages <= 1) {\r\n    return null; // Don't render pagination if there's only one page\r\n  }\r\n\r\n  const handlePageClick = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      onPageChange(page);\r\n    }\r\n  };\r\n\r\n  // This function creates the array of page numbers to display\r\n  const createPageNumbers = () => {\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    // For a more advanced component, you could add logic here\r\n    // to show \"...\" for a large number of pages.\r\n    return pageNumbers;\r\n  };\r\n\r\n  return (\r\n    <nav className=\"pagination-container\">\r\n      <button \r\n        className=\"pagination-button\"\r\n        onClick={() => handlePageClick(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        &laquo; Previous\r\n      </button>\r\n      {createPageNumbers().map(number => (\r\n        <button\r\n          key={number}\r\n          className={`pagination-button ${currentPage === number ? 'active' : ''}`}\r\n          onClick={() => handlePageClick(number)}\r\n        >\r\n          {number}\r\n        </button>\r\n      ))}\r\n      <button\r\n        className=\"pagination-button\"\r\n        onClick={() => handlePageClick(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        Next &raquo;\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,WAAW;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAChE,IAAID,UAAU,IAAI,CAAC,EAAE;IACnB,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,MAAME,eAAe,GAAIC,IAAI,IAAK;IAChC,IAAIA,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAIH,UAAU,EAAE;MACnCC,YAAY,CAACE,IAAI,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,WAAW,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,UAAU,EAAEM,CAAC,EAAE,EAAE;MACpCD,WAAW,CAACE,IAAI,CAACD,CAAC,CAAC;IACrB;IACA;IACA;IACA,OAAOD,WAAW;EACpB,CAAC;EAED,oBACER,OAAA;IAAKW,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCZ,OAAA;MACEW,SAAS,EAAC,mBAAmB;MAC7BE,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAACH,WAAW,GAAG,CAAC,CAAE;MAChDY,QAAQ,EAAEZ,WAAW,KAAK,CAAE;MAAAU,QAAA,EAC7B;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRX,iBAAiB,CAAC,CAAC,CAACY,GAAG,CAACC,MAAM,iBAC7BpB,OAAA;MAEEW,SAAS,EAAE,qBAAqBT,WAAW,KAAKkB,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;MACzEP,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAACe,MAAM,CAAE;MAAAR,QAAA,EAEtCQ;IAAM,GAJFA,MAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKL,CACT,CAAC,eACFlB,OAAA;MACEW,SAAS,EAAC,mBAAmB;MAC7BE,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAACH,WAAW,GAAG,CAAC,CAAE;MAChDY,QAAQ,EAAEZ,WAAW,KAAKC,UAAW;MAAAS,QAAA,EACtC;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACG,EAAA,GAjDIpB,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}