{"ast":null,"code":"var _jsxFileName = \"F:\\\\CTS HACKATHON\\\\pubmed-semantic-search\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport SearchBar from './components/SearchBar';\nimport ResultsList from './components/ResultsList';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport AdvancedSearchForm from './components/AdvancedSearchForm';\nimport { searchPubMed } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [hasSearched, setHasSearched] = useState(false);\n  const [searchMode, setSearchMode] = useState('simple');\n  // NEW: State for the search suggestion\n  const [suggestion, setSuggestion] = useState('');\n  const handleSearch = async query => {\n    setIsLoading(true);\n    setError('');\n    setHasSearched(true);\n    setResults([]);\n    // NEW: Clear previous suggestion on each new search\n    setSuggestion('');\n    try {\n      const data = await searchPubMed(query, searchMode);\n      // MODIFIED: Set both results and suggestion from the API response\n      setResults(data.results);\n      if (data.suggestion) {\n        setSuggestion(data.suggestion);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // NEW: Handler for when the user clicks the suggestion link\n  const handleSuggestionClick = suggestedQuery => {\n    // This will trigger a new search with the corrected query\n    // Find the simple search input and update its value\n    const input = document.querySelector('.search-bar-container .search-input');\n    if (input) {\n      input.value = suggestedQuery;\n    }\n    handleSearch(suggestedQuery);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PubMed Semantic Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your AI-powered research assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-mode-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: searchMode === 'simple' ? 'active' : '',\n        onClick: () => setSearchMode('simple'),\n        children: \"Simple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: searchMode === 'advanced' ? 'active' : '',\n        onClick: () => setSearchMode('advanced'),\n        children: \"Advanced\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), searchMode === 'simple' ? /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AdvancedSearchForm, {\n      onSearch: handleSearch,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), !isLoading && suggestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestion-container\",\n      children: [\"Did you mean: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"suggestion-link\",\n        onClick: () => handleSuggestionClick(suggestion),\n        children: suggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), \"?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), !isLoading && !error && hasSearched && results.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-message\",\n      children: \"No results found. Please try a different query.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResultsList, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SsaOpUTt9jZB4Mk6UEYuL2VqgOo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","ResultsList","LoadingSpinner","AdvancedSearchForm","searchPubMed","jsxDEV","_jsxDEV","App","_s","results","setResults","isLoading","setIsLoading","error","setError","hasSearched","setHasSearched","searchMode","setSearchMode","suggestion","setSuggestion","handleSearch","query","data","err","message","handleSuggestionClick","suggestedQuery","input","document","querySelector","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSearch","length","_c","$RefreshReg$"],"sources":["F:/CTS HACKATHON/pubmed-semantic-search/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/App.css';\r\nimport SearchBar from './components/SearchBar';\r\nimport ResultsList from './components/ResultsList';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport AdvancedSearchForm from './components/AdvancedSearchForm';\r\nimport { searchPubMed } from './services/api';\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n  const [searchMode, setSearchMode] = useState('simple');\r\n  // NEW: State for the search suggestion\r\n  const [suggestion, setSuggestion] = useState('');\r\n\r\n  const handleSearch = async (query) => {\r\n    setIsLoading(true);\r\n    setError('');\r\n    setHasSearched(true);\r\n    setResults([]);\r\n    // NEW: Clear previous suggestion on each new search\r\n    setSuggestion('');\r\n    try {\r\n      const data = await searchPubMed(query, searchMode);\r\n      // MODIFIED: Set both results and suggestion from the API response\r\n      setResults(data.results);\r\n      if (data.suggestion) {\r\n        setSuggestion(data.suggestion);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // NEW: Handler for when the user clicks the suggestion link\r\n  const handleSuggestionClick = (suggestedQuery) => {\r\n    // This will trigger a new search with the corrected query\r\n    // Find the simple search input and update its value\r\n    const input = document.querySelector('.search-bar-container .search-input');\r\n    if (input) {\r\n        input.value = suggestedQuery;\r\n    }\r\n    handleSearch(suggestedQuery);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <h1>PubMed Semantic Search</h1>\r\n        <p>Your AI-powered research assistant</p>\r\n      </header>\r\n      \r\n      <div className=\"search-mode-toggle\">\r\n        <button className={searchMode === 'simple' ? 'active' : ''} onClick={() => setSearchMode('simple')}>Simple</button>\r\n        <button className={searchMode === 'advanced' ? 'active' : ''} onClick={() => setSearchMode('advanced')}>Advanced</button>\r\n      </div>\r\n      \r\n      {searchMode === 'simple' ? (\r\n        <SearchBar onSearch={handleSearch} isLoading={isLoading} />\r\n      ) : (\r\n        <AdvancedSearchForm onSearch={handleSearch} isLoading={isLoading} />\r\n      )}\r\n\r\n      {/* NEW: Render the suggestion if it exists */}\r\n      {!isLoading && suggestion && (\r\n        <div className=\"suggestion-container\">\r\n          Did you mean: <span className=\"suggestion-link\" onClick={() => handleSuggestionClick(suggestion)}>\r\n            {suggestion}\r\n          </span>?\r\n        </div>\r\n      )}\r\n\r\n      {isLoading && <LoadingSpinner />}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {!isLoading && !error && hasSearched && results.length === 0 && (\r\n        <div className=\"info-message\">No results found. Please try a different query.</div>\r\n      )}\r\n      <ResultsList results={results} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}