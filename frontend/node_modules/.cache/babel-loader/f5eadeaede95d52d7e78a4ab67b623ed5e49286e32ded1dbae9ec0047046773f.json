{"ast":null,"code":"var _jsxFileName = \"F:\\\\CTS HACKATHON\\\\pubmed-semantic-search\\\\frontend\\\\src\\\\components\\\\KnowledgeGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useCallback } from 'react';\nimport ForceGraph2D from 'react-force-graph-2d'; // This import will now work correctly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KnowledgeGraph = ({\n  graphData\n}) => {\n  _s();\n  const fgRef = useRef();\n  const handleNodeClick = useCallback(node => {\n    // Aim at node from outside it to zoom and center on it\n    const distance = 40;\n    const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\n    if (fgRef.current) {\n      fgRef.current.cameraPosition({\n        x: node.x * distRatio,\n        y: node.y * distRatio,\n        z: node.z * distRatio\n      },\n      // new position\n      node,\n      // lookAt ({ x, y, z })\n      3000 // ms transition duration\n      );\n    }\n  }, [fgRef]);\n  if (!graphData || !graphData.nodes || graphData.nodes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-message\",\n      children: \"No graph data could be generated for this query.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      ref: fgRef,\n      graphData: graphData,\n      nodeLabel: \"label\",\n      nodeAutoColorBy: \"group\",\n      linkDirectionalArrowLength: 3.5,\n      linkDirectionalArrowRelPos: 1,\n      linkLabel: \"label\",\n      linkWidth: 1,\n      onNodeClick: handleNodeClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(KnowledgeGraph, \"khL57LSuAdtxAw/Q6PBeR37sHHA=\");\n_c = KnowledgeGraph;\nexport default KnowledgeGraph;\nvar _c;\n$RefreshReg$(_c, \"KnowledgeGraph\");","map":{"version":3,"names":["React","useRef","useCallback","ForceGraph2D","jsxDEV","_jsxDEV","KnowledgeGraph","graphData","_s","fgRef","handleNodeClick","node","distance","distRatio","Math","hypot","x","y","z","current","cameraPosition","nodes","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","nodeLabel","nodeAutoColorBy","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkLabel","linkWidth","onNodeClick","_c","$RefreshReg$"],"sources":["F:/CTS HACKATHON/pubmed-semantic-search/frontend/src/components/KnowledgeGraph.js"],"sourcesContent":["import React, { useRef, useCallback } from 'react';\r\nimport ForceGraph2D from 'react-force-graph-2d'; // This import will now work correctly\r\n\r\nconst KnowledgeGraph = ({ graphData }) => {\r\n  const fgRef = useRef();\r\n\r\n  const handleNodeClick = useCallback(node => {\r\n    // Aim at node from outside it to zoom and center on it\r\n    const distance = 40;\r\n    const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\r\n\r\n    if (fgRef.current) {\r\n        fgRef.current.cameraPosition(\r\n          { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }, // new position\r\n          node, // lookAt ({ x, y, z })\r\n          3000  // ms transition duration\r\n        );\r\n    }\r\n  }, [fgRef]);\r\n\r\n  if (!graphData || !graphData.nodes || graphData.nodes.length === 0) {\r\n    return <div className=\"info-message\">No graph data could be generated for this query.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"graph-container\">\r\n      <ForceGraph2D\r\n        ref={fgRef}\r\n        graphData={graphData}\r\n        nodeLabel=\"label\"\r\n        nodeAutoColorBy=\"group\"\r\n        linkDirectionalArrowLength={3.5}\r\n        linkDirectionalArrowRelPos={1}\r\n        linkLabel=\"label\"\r\n        linkWidth={1}\r\n        onNodeClick={handleNodeClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KnowledgeGraph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,KAAK,GAAGR,MAAM,CAAC,CAAC;EAEtB,MAAMS,eAAe,GAAGR,WAAW,CAACS,IAAI,IAAI;IAC1C;IACA,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,SAAS,GAAG,CAAC,GAAGD,QAAQ,GAAGE,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACK,CAAC,EAAEL,IAAI,CAACM,CAAC,EAAEN,IAAI,CAACO,CAAC,CAAC;IAEnE,IAAIT,KAAK,CAACU,OAAO,EAAE;MACfV,KAAK,CAACU,OAAO,CAACC,cAAc,CAC1B;QAAEJ,CAAC,EAAEL,IAAI,CAACK,CAAC,GAAGH,SAAS;QAAEI,CAAC,EAAEN,IAAI,CAACM,CAAC,GAAGJ,SAAS;QAAEK,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGL;MAAU,CAAC;MAAE;MACzEF,IAAI;MAAE;MACN,IAAI,CAAE;MACR,CAAC;IACL;EACF,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,IAAI,CAACF,SAAS,IAAI,CAACA,SAAS,CAACc,KAAK,IAAId,SAAS,CAACc,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAClE,oBAAOjB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAgD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7F;EAEA,oBACEvB,OAAA;IAAKkB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BnB,OAAA,CAACF,YAAY;MACX0B,GAAG,EAAEpB,KAAM;MACXF,SAAS,EAAEA,SAAU;MACrBuB,SAAS,EAAC,OAAO;MACjBC,eAAe,EAAC,OAAO;MACvBC,0BAA0B,EAAE,GAAI;MAChCC,0BAA0B,EAAE,CAAE;MAC9BC,SAAS,EAAC,OAAO;MACjBC,SAAS,EAAE,CAAE;MACbC,WAAW,EAAE1B;IAAgB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CApCIF,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}